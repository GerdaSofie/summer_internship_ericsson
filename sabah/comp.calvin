component MediaPlayer() dict -> {

    const : std.Constant(data=true)
    mush : text.Mustache(fmt="{{data}}.ogg")
    player : media.MediaPlayer2()

    .dict > mush.dict
    mush.text > player.mediafile
    const.token > player.play

}


component MediaPlayerUt() dict -> {

    const : std.Constant(data=true)
    mush : text.Mustache(fmt="{{data}}_ut.ogg")
    player : media.MediaPlayer2()

    .dict > mush.dict
    mush.text > player.mediafile
    const.token > player.play

}


component ClearRFID() -> ontrue {
  /* component som rensar ut falsev채rdet som kommer n채r du plockar bort idt fr책n l채saren och skickar ut rfid datan. */
  rfid : sensor.RFIDReader()
  select : flow.Select()
  status : json.GetValue()

  voidport > rfid.data
  rfid.data > select.data
  rfid.data > status.container
  "status" > status.key
  status.value > select.select

  select.case_false > voidport
  select.case_true > .ontrue
}

rfid : ClearRFID()
mp : MediaPlayer()
mput : MediaPlayerUt()
camera : media.IPCamera()
render : media.MultipleImageRenderer()
select2 : flow.Select()
init : flow.Init(data="1")
antaldic : json.Dict()
antalmush2 : text.Mustache(fmt="There is {{antal}} person in this room")
antalmush : text.Mustache(fmt="There are {{antal}} people in this room")
push : web.Pushbullet(title="Welcome to garage, please keep up with the garage info?")
people : room.PersonCounter()
switch : flow.Switch()
compare : std.Compare(rel="=")
rum : json.GetValue()

getid : json.GetValue()
length : text.Length()
compareio : std.Compare(rel=">=")
print : io.Print()

rfid.ontrue > getid.container

"data" > getid.key
getid.value > people.id
"garage" > people.room
people.status > voidport
people.rooms > rum.container
"garage" > rum.key
rum.value > length.string
length.length > antaldic.value
length.length > compareio.a
length.length > init.in
"antal" > antaldic.key

init.out > compareio.b
antaldic.dict >  print.token      /* antalmush redigering*/

compareio.result > select2.select
getid.value > select2.data
select2.case_false > render.remove
select2.case_false > mput.dict
select2.case_true > camera.trigger
select2.case_true > mp.dict
camera.status > voidport
camera.image > render.image
getid.value > render.id


length.length > compare.a
1 >compare.b
antaldic.dict > antalmush.dict
antaldic.dict > antalmush2.dict

compare.result > switch.switch
antalmush2.text > switch.a
antalmush.text > switch.b

switch.b > push.message
switch.a > voidport

people.status > voidport
